{"version":3,"sources":["components/Input/styles.ts","components/Input/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/ExtendedWeather/SearchCard/styles.ts","components/ExtendedWeather/SearchCard/index.tsx","components/ExtendedWeather/styles.ts","components/ExtendedWeather/GridTable/styles.ts","components/ExtendedWeather/GridTable/index.tsx","components/ExtendedWeather/index.tsx"],"names":["Wrapper","styled","div","StyledInput","input","theme","palette","grey","typography","body","reg","common","black","primary","main","Label","label","spacing","white","breakpoints","tablet","Input","id","required","className","onChange","rest","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","placeholder","htmlFor","SearchGroup","phone","SearchTitle","h1","FilterInput","ResetButton","button","shape","borderRadius","sm","transitions","duration","shorter","easing","easeInOut","dark","SearchCard","filters","setFilters","handleFiltersChange","e","name","value","prevState","Card","type","minTemp","min","max","maxTemp","onClick","preventDefault","undefined","ErrorMessage","p","CardTitle","h2","Grid","Heading","span","Content","Img","img","GridTable","filterData","title","data","map","index","datetime","weather","temp","min_temp","max_temp","src","icon","alt","description","ExtendedWeather","useContext","AppContext","extWeather","dispatch","useState","errorMessage","setErrorMessage","useEffect","retrieveAllExtWeathers","cities","then","ExtWeatherTypes","Set","payload","catch","err","console","warn","locData","filter","toString","Number","entries","locationData","Spinner"],"mappings":"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","file":"static/js/5.79610c84.chunk.js","sourcesContent":["import { theme } from \"globalStyles\";\nimport styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 0 auto 1rem;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  height: 3rem;\n  border: 1px solid ${theme.palette.grey[100]};\n  border-radius: 5px;\n  outline: none;\n  padding: 1rem 0.7rem;\n  ${theme.typography.body.reg};\n\n  &:hover {\n    border-color: ${theme.palette.common.black};\n  }\n\n  &:focus {\n    border-color: ${theme.palette.primary.main};\n\n    & + label {\n      color: ${theme.palette.primary.main};\n      top: 1px;\n      transform: translateY(-50%) scale(0.9);\n\n      &:before {\n        content: \"\";\n      }\n    }\n  }\n\n  &:not(:placeholder-shown) {\n    & + label {\n      top: 1px;\n      transform: translateY(-50%) scale(0.9);\n\n      &:before {\n        content: \"\";\n      }\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  font-size: 1rem;\n  left: 0;\n  top: ${theme.spacing(3)};\n  transform: translateY(-50%);\n  color: ${theme.palette.grey[150]};\n  padding: 0 0.3rem;\n  margin: 0 0.5rem;\n  transition: 0.1s ease-out;\n  transform-origin: left top;\n  pointer-events: none;\n  text-transform: capitalize;\n\n  &:before {\n    display: block;\n    width: 100%;\n    height: ${theme.spacing(1.35)};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    background-color: ${theme.palette.common.white};\n    z-index: -1;\n  }\n\n  ${theme.breakpoints.tablet} {\n    top: ${theme.spacing(2.75)};\n  }\n`;\n","import React from \"react\";\nimport { Wrapper, StyledInput, Label } from \"./styles\";\n\ntype PropsType = React.InputHTMLAttributes<HTMLInputElement> & {\n  id: string;\n  label: string;\n  required?: boolean;\n  className?: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\n/**\n * Custom input component.\n * @param {string} id - Input id.\n * @param {label} label - Label to display on input.\n * @param {required} required - Input required attribute.\n * @param {className} className - ClassName to apply custom styles.\n * @param {onChange} onChange - Function for controlled input.\n * @param {object} rest - HTML Input attributes as custom props.\n * @return - Controllable input element.\n */\nconst Input: React.FC<PropsType> = ({ id, label, required, className, onChange, ...rest }: PropsType) => (\n  <Wrapper className={className}>\n    <StyledInput {...rest} id={id} placeholder=\" \" required={required} onChange={onChange} />\n\n    <Label htmlFor={id}>\n      {label}\n      {required && \" *\"}\n    </Label>\n  </Wrapper>\n);\n\nexport default Input;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import styled from \"styled-components\";\nimport Input from \"components/Input\";\nimport { theme } from \"globalStyles\";\n\nexport const SearchGroup = styled.div`\n  display: flex;\n  width: 100%;\n\n  ${theme.breakpoints.phone} {\n    flex-direction: column;\n  }\n`;\n\nexport const SearchTitle = styled.h1`\n  margin-bottom: ${theme.spacing(4)};\n  text-align: center;\n`;\n\nexport const FilterInput = styled(Input)`\n  &:not(:last-child) {\n    margin-right: ${theme.spacing(3)};\n  }\n`;\n\nexport const ResetButton = styled.button`\n  background-color: ${theme.palette.primary.main};\n  border: none;\n  border-radius: ${theme.shape.borderRadius};\n  margin-top: ${theme.spacing(2)};\n  padding: ${theme.spacing(2)} ${theme.spacing(4)};\n  ${theme.typography.body.sm};\n  color: ${theme.palette.common.white};\n  font-weight: 600;\n  text-transform: uppercase;\n  text-decoration: none;\n  letter-spacing: 0.03rem;\n  transition: background-color ${theme.transitions.duration.shorter}ms ${theme.transitions.easing.easeInOut};\n  cursor: pointer;\n\n  @media (hover: hover) {\n    &:hover {\n      background-color: ${theme.palette.primary.dark};\n    }\n  }\n`;\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport Card from \"components/Card\";\nimport { SearchGroup, SearchTitle, FilterInput, ResetButton } from \"./styles\";\n\ntype Props = {\n  filters: Filters;\n  setFilters: Dispatch<SetStateAction<Filters>>;\n};\n\n/**\n * Card with inputs for filtering weather data using min and max temperatures.\n * @param {Filters} filters - Min and Max temperature filters for weather data.\n * @returns Card with inputs and reset button.\n */\nconst SearchCard: React.FC<Props> = ({ filters, setFilters }: Props) => {\n  // Handles controlled inputs on change\n  const handleFiltersChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n\n    setFilters((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  // Reset filters\n  const resetFilters = (e: React.SyntheticEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n\n    setFilters({\n      minTemp: undefined,\n      maxTemp: undefined,\n    });\n  };\n\n  return (\n    <Card>\n      <SearchTitle>Filter by:</SearchTitle>\n\n      <SearchGroup>\n        <FilterInput\n          type=\"number\"\n          id=\"min_temp\"\n          label=\"Min Temp\"\n          name=\"minTemp\"\n          value={filters.minTemp || \"\"}\n          min=\"-90\"\n          max=\"60\"\n          onChange={handleFiltersChange}\n        />\n        <FilterInput\n          type=\"number\"\n          id=\"max_temp\"\n          label=\"Max Temp\"\n          name=\"maxTemp\"\n          value={filters.maxTemp || \"\"}\n          min=\"-90\"\n          max=\"60\"\n          onChange={handleFiltersChange}\n        />\n      </SearchGroup>\n\n      {(filters.minTemp || filters.maxTemp) && (\n        <ResetButton type=\"button\" onClick={resetFilters}>\n          Reset\n        </ResetButton>\n      )}\n    </Card>\n  );\n};\n\nexport default SearchCard;\n","import styled from \"styled-components\";\nimport Card from \"components/Card\";\nimport { theme } from \"globalStyles\";\n\nexport const ErrorMessage = styled.p`\n  color: ${theme.palette.common.white};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  ${Card} {\n    &:not(:last-child) {\n      margin-bottom: ${theme.spacing(8)};\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport Card from \"components/Card\";\nimport { theme } from \"globalStyles\";\n\nexport const ErrorMessage = styled.p`\n  color: ${theme.palette.common.white};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  ${Card} {\n    &:not(:last-child) {\n      margin-bottom: ${theme.spacing(8)};\n    }\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  margin-bottom: ${theme.spacing(4)};\n  text-align: center;\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, auto);\n  border-bottom: 1px solid ${theme.palette.grey[100]};\n  border-left: 1px solid ${theme.palette.grey[100]};\n  width: 100%;\n  overflow-x: auto;\n\n  & > * {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    border-top: 1px solid ${theme.palette.grey[100]};\n    border-right: 1px solid ${theme.palette.grey[100]};\n    padding: ${theme.spacing(2)};\n  }\n`;\n\nexport const Heading = styled.span``;\n\nexport const Content = styled.span``;\n\nexport const Img = styled.img`\n  max-width: ${theme.spacing(5)};\n`;\n","import React, { Fragment } from \"react\";\nimport Card from \"components/Card\";\nimport { CardTitle, Grid, Heading, Content, Img } from \"./styles\";\n\ntype Props = {\n  filterData: (locData: ExtWeatherData[]) => ExtWeatherData[];\n  title: City;\n  data: ExtWeatherData[];\n};\n\nconst GridTable: React.FC<Props> = ({ filterData, title, data }: Props) => (\n  <Card>\n    <CardTitle>{title}</CardTitle>\n\n    <Grid>\n      <Heading>Date</Heading>\n      <Heading>Weather</Heading>\n      <Heading>Temp</Heading>\n      <Heading>Min Temp</Heading>\n      <Heading>Max Temp</Heading>\n\n      {filterData(data)?.map(({ datetime, weather, temp, min_temp, max_temp }, index) => (\n        <Fragment key={`${datetime}-${index}`}>\n          <Content>{datetime}</Content>\n          <Content>\n            <Img src={`https://www.weatherbit.io/static/img/icons/${weather?.icon}.png`} alt={weather?.description} />\n          </Content>\n          <Content>{temp}°</Content>\n          <Content>{min_temp}°</Content>\n          <Content>{max_temp}°</Content>\n        </Fragment>\n      ))}\n    </Grid>\n  </Card>\n);\n\nexport default GridTable;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { retrieveAllExtWeathers } from \"api\";\nimport { AppContext } from \"context\";\nimport ExtWeatherTypes from \"context/extWeather/types\";\nimport cities from \"data/cities.json\";\nimport Spinner from \"components/Spinner\";\nimport SearchCard from \"./SearchCard\";\nimport { ErrorMessage, Wrapper } from \"./styles\";\nimport GridTable from \"./GridTable\";\n\n/**\n * Displays extended 16-day weather data for all specified cities.\n * @returns Extended 16-day weather page with filterable weathers for multiple locations.\n */\nconst ExtendedWeather: React.FC = () => {\n  const { extWeather, dispatch } = useContext(AppContext);\n\n  // Weather data filters\n  const [filters, setFilters] = useState<Filters>({\n    minTemp: undefined,\n    maxTemp: undefined,\n  });\n\n  // Error message to handle server errors\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\n\n  // Retrieve extended 16-day weathers for all specified cities\n  useEffect(() => {\n    retrieveAllExtWeathers(cities as City[])\n      .then((data) => {\n        dispatch({\n          type: ExtWeatherTypes.Set,\n          payload: data,\n        });\n      })\n      .catch((err) => {\n        setErrorMessage(\"Aw snap, something went wrong. Please try again later.\");\n        console.warn(err);\n      });\n  }, []);\n\n  /**\n   * Filter data with min / max temp, if specified.\n   * @param {ExtWeatherData[]} locData - Weathers data to filter by min / max temperatures.\n   * @returns Filtered weather data.\n   */\n  const filterData = (locData: ExtWeatherData[]): ExtWeatherData[] =>\n    locData?.filter((data) => {\n      if ((filters.minTemp || \"\")?.toString() && (filters.maxTemp || \"\")?.toString()) {\n        return data.min_temp <= Number(filters.minTemp) && data.max_temp >= Number(filters.maxTemp);\n      }\n      if ((filters.minTemp || \"\")?.toString()) {\n        return data.min_temp <= Number(filters.minTemp);\n      }\n      if ((filters.maxTemp || \"\")?.toString()) {\n        return data.max_temp >= Number(filters.maxTemp);\n      }\n      return true;\n    });\n\n  return (\n    <>\n      {errorMessage ? (\n        <ErrorMessage>{errorMessage}</ErrorMessage>\n      ) : (\n        <>\n          {extWeather ? (\n            <Wrapper>\n              <SearchCard filters={filters} setFilters={setFilters} />\n\n              {Object.entries(extWeather).map((locationData, index) =>\n                filterData(locationData[1])?.length ? (\n                  <GridTable\n                    key={`${locationData[0]}-${index}`}\n                    filterData={filterData}\n                    title={locationData[0] as City}\n                    data={locationData[1]}\n                  />\n                ) : null,\n              )}\n            </Wrapper>\n          ) : (\n            <Spinner />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ExtendedWeather;\n"],"sourceRoot":""}